# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hello.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication, QLabel, QSpacerItem, QSizePolicy
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtCore import QTimer, QTime, Qt
from PyQt5.QtMultimedia import QSound


class Musc_test_Window(QDialog):
    def __init__(self):
        super(Musc_test_Window, self).__init__()
        self.setWindowTitle("肌动伪迹采集")
        self.resize(2600,1600)

        # 创建显示倒计时的 QLabel
        layout = QtWidgets.QVBoxLayout(self)  # 创建一个 QVBoxLayout 布局管理器
        self.timer_label = QLabel(self)
        self.timer_label.setAlignment(Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(35)  # 设置字体大小
        self.timer_label.setFont(font)
        layout.addWidget(self.timer_label, alignment=Qt.AlignCenter)

        # 创建定时器
        self.leftright_timer = QTimer(self)
        self.updown_timer = QTimer(self)
        self.arm_timer = QTimer(self)
        self.leftright_timer.timeout.connect(self.leftright_repeat)
        self.updown_timer.timeout.connect(self.updown_repeat)
        self.arm_timer.timeout.connect(self.arm_repeat)

    def reminder(self):
        self.repeat_times = 4
        self.count = 0
        self.label = 0
        self.leftright_timer.start(3000)

    def leftright_repeat(self):
        self.count += 1
        self.play_alarm()
        self.timer_label.hide()
        if (self.count % 2) == 1 and self.repeat_times != 0:
            self.timer_label.show()
            if self.label == 0 :
                QSound.play("左摇头.wav")
                self.timer_label.setText("向左摇头")
                self.label = 1
            else:
                QSound.play("右摇头.wav")
                self.timer_label.setText("向右摇头")
                self.label = 0
            self.repeat_times -= 1
        elif self.repeat_times == 0:
            self.leftright_timer.stop()
            self.updown_reminder()


    def updown_reminder(self):
        self.count = 0
        self.label = 0
        self.repeat_times = 4
        self.updown_timer.start(3000)

    def updown_repeat(self):
        self.count += 1
        self.play_alarm()
        self.timer_label.hide()
        if (self.count % 2) == 1 and self.repeat_times != 0:
            self.timer_label.show()
            if self.label == 0:
                QSound.play("上摇头.wav")
                self.timer_label.setText("向上摇头")
                self.label = 1
            else:
                QSound.play("下摇头.wav")
                self.timer_label.setText("向下摇头")
                self.label = 0
            self.repeat_times -= 1
        elif self.repeat_times == 0:
            self.updown_timer.stop()
            self.arm_reminder()

    def arm_reminder(self):
        self.count = 0
        self.label = 0
        self.repeat_times = 4
        self.arm_timer.start(3000)

    def arm_repeat(self):
        self.count += 1
        self.play_alarm()
        self.timer_label.hide()
        if (self.count % 2) == 1 and self.repeat_times != 0:
            self.timer_label.show()
            if self.label == 0:
                QSound.play("左手.wav")
                self.timer_label.setText("左手水平抬起")
                self.label = 1
            else:
                QSound.play("右手.wav")
                self.timer_label.setText("右手水平抬起")
                self.label = 0
            self.repeat_times -= 1
        elif self.repeat_times == 0:
            self.arm_timer.stop()
            self.timer_label.show()
            self.play_alarm()
            QSound.play("结束.wav")
            self.timer_label.setText("肌动测试结束！")



    def play_alarm(self):
        # 播放声音，确保你有这个文件
        QSound.play("alert.wav")  # 音频文件路径


