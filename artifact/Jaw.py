# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hello.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication, QLabel, QSpacerItem, QSizePolicy
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtCore import QTimer, QTime, Qt
from PyQt5.QtMultimedia import QSound


class Jaw_test_Window(QDialog):
    def __init__(self):
        super(Jaw_test_Window, self).__init__()
        self.setWindowTitle("下颚伪迹采集")
        self.resize(2600,1600)

        # 创建显示倒计时的 QLabel
        layout = QtWidgets.QVBoxLayout(self)  # 创建一个 QVBoxLayout 布局管理器
        self.timer_label = QLabel(self)
        self.timer_label.setAlignment(Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(35)  # 设置字体大小
        self.timer_label.setFont(font)
        layout.addWidget(self.timer_label, alignment=Qt.AlignCenter)

        # 创建定时器
        self.rest_timer = QTimer(self)
        self.chew_timer = QTimer(self)
        self.swallow_timer = QTimer(self)
        self.rest_timer.timeout.connect(self.rest_repeat)
        self.chew_timer.timeout.connect(self.chew_repeat)
        self.swallow_timer.timeout.connect(self.swallow_repeat)


    def reminder(self):
        self.rest_num = 2
        self.chew_reminder()

    def chew_reminder(self):
        self.chew_num = 5
        self.timer_label.setText("咬牙")
        QSound.play("咬牙.wav")
        self.chew_timer.start(2000)

    def swallow_reminder(self):
        self.swallow_num = 5
        self.timer_label.setText("吞咽口水")
        QSound.play("吞咽.wav")
        self.swallow_timer.start(5000)

    def rest_reminder(self):
        self.remaintime = 3
        QSound.play("休息.wav")
        self.rest_timer.start(1000)

    def rest_repeat(self):
        minutes = self.remaintime // 60
        seconds = self.remaintime % 60
        label_text = "休息时间"
        self.timer_label.setText(f"{label_text}:{minutes:02d}:{seconds:02d}")

        if self.remaintime != 0:
            self.remaintime -= 1
        else:
            self.rest_timer.stop()
            if self.rest_num == 2:
                self.chew_reminder()
                self.rest_num -= 1
            elif self.rest_num == 1:
                self.swallow_reminder()
                self.rest_num -= 1
            elif self.rest_num == 0:
                self.play_alarm()
                QSound.play("结束.wav")
                self.timer_label.setText("下颚测试结束！")

    def chew_repeat(self):
        if self.chew_num != 0:
            self.play_alarm()
            self.chew_num -= 1
        else:
            self.chew_timer.stop()
            self.rest_reminder()

    def swallow_repeat(self):
        if self.swallow_num != 0:
            self.play_alarm()
            self.swallow_num -= 1
        else:
            self.swallow_timer.stop()
            self.timer_label.setText("下颚测试结束！")



    def play_alarm(self):
        # 播放声音，确保你有这个文件
        QSound.play("alert.wav")  # 音频文件路径


