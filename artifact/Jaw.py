# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hello.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication, QLabel, QSpacerItem, QSizePolicy
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtCore import QTimer, QTime, Qt
from PyQt5.QtMultimedia import QSound
import api

'''
下颚测试类，弹出下颚测试窗口，下颚测试包括咬牙和吞咽口水
咬牙5次
休息20s
咬牙5次
休息20s
吞咽口水5次
'''

class Jaw_test_Window(QDialog):
    def __init__(self):
        super(Jaw_test_Window, self).__init__()
        self.setWindowTitle("下颚伪迹采集")
        self.resize(580,580)

        # 创建显示倒计时的 QLabel
        layout = QtWidgets.QVBoxLayout(self)  # 创建一个 QVBoxLayout 布局管理器
        self.timer_label = QLabel(self)
        self.timer_label.setAlignment(Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(35)  # 设置字体大小
        self.timer_label.setFont(font)
        layout.addWidget(self.timer_label, alignment=Qt.AlignCenter)

        # 创建定时器
        self.rest_timer = QTimer(self)
        self.chew_timer = QTimer(self)
        self.swallow_timer = QTimer(self)
        self.rest_timer.timeout.connect(self.rest_repeat)
        self.chew_timer.timeout.connect(self.chew_repeat)
        self.swallow_timer.timeout.connect(self.swallow_repeat)


    def reminder(self):#此函数为开启下颚测试的初始函数，首先进行咬牙测试
        self.rest_num = 2 #休息次数为2，即咬牙，休息，咬牙，休息，吞咽口水
        self.chew_reminder()

    def chew_reminder(self):#调用此函数执行咬牙测试
        self.chew_num = 5 #咬牙次数
        self.timer_label.setText("咬牙")
        QSound.play("咬牙.wav")
        api.mark(12)
        self.chew_timer.start(2000) #每次咬牙持续2s

    def swallow_reminder(self): #调用此函数执行吞咽口水测试
        self.swallow_num = 5 #吞咽口水次数
        self.timer_label.setText("吞咽口水")
        QSound.play("吞咽.wav")
        self.swallow_timer.start(5000) #每次吞咽口水持续5秒

    def rest_reminder(self):#调用此函数开始休息
        self.remaintime = 20 #每次休息20s
        QSound.play("休息.wav")
        self.rest_timer.start(1000)

    def rest_repeat(self):
        minutes = self.remaintime // 60
        seconds = self.remaintime % 60
        label_text = "休息时间"
        self.timer_label.setText(f"{label_text}:{minutes:02d}:{seconds:02d}")

        if self.remaintime != 0:
            self.remaintime -= 1
        else:
            self.rest_timer.stop()#根据休息记录，决定接下来执行什么测试
            if self.rest_num == 2:
                self.chew_reminder()
                self.rest_num -= 1
            elif self.rest_num == 1:
                self.swallow_reminder()
                self.rest_num -= 1

    def chew_repeat(self):
        if self.chew_num != 0:
            self.play_alarm()
            self.chew_num -= 1
        else:
            self.chew_timer.stop()
            api.mark(0)
            self.rest_reminder()

    def swallow_repeat(self):
        if self.swallow_num != 0:
            self.play_alarm()
            if self.swallow_num != 5:
                api.mark(0)
            api.mark(13)
            self.swallow_num -= 1
        else:
            self.swallow_timer.stop() #吞咽结束后不再休息，直接结束整轮测试
            api.mark(0)
            self.timer_label.setText("下颚测试结束！")



    def play_alarm(self):
        # 播放声音，确保你有这个文件
        QSound.play("alert.wav")  # 音频文件路径


